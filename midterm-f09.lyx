#LyX 1.5.5 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass article
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section*
18.335 Mid-term Exam (Fall 2009)
\end_layout

\begin_layout Subsection*
Problem 1: Caches and QR (30 pts)
\end_layout

\begin_layout Standard
In class, we learned the Gram-Schmidt and modified Gram-Schmidt algorithms
 to form the (reduced) 
\begin_inset Formula $A=QR$
\end_inset

 factorization of an 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\begin_inset Formula $A$
\end_inset

 (with independent columns 
\begin_inset Formula $a_{1},a_{2},\ldots$
\end_inset

 and 
\begin_inset Formula $n\leq m$
\end_inset

).
 In particular, for simplicity let us consider the computation of the 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\begin_inset Formula $Q$
\end_inset

 only (whose columns are the orthonormal basis for the column space of 
\begin_inset Formula $A$
\end_inset

), not worrying about keeping track of 
\begin_inset Formula $R$
\end_inset

, and for simplicity consider classical (not modified) Gram-Schmidt: 
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $q_{1}=a_{1}/\Vert a_{1}\Vert$
\end_inset


\end_layout

\begin_layout LyX-Code
for 
\begin_inset Formula $j=2,3,\ldots,n$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $v_{j}=a_{j}-\sum_{i=1}^{j-1}q_{i}(q_{i}^{*}a_{j})$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $q_{j}=v_{j}/\Vert v_{j}\Vert$
\end_inset


\end_layout

\begin_layout Standard
In this question, you will consider the cache complexity of this algorithm
 with an ideal cache of size 
\begin_inset Formula $Z$
\end_inset

 (no cache lines).
 If the algorithm is implemented directly as written above, there is little
 temporal locality and 
\begin_inset Formula $\Theta(mn^{2})$
\end_inset

 misses are required, independent of 
\begin_inset Formula $Z$
\end_inset

.
 You are also 
\series bold
given
\series default
 that you can multiply an 
\begin_inset Formula $m\times n$
\end_inset

 matrix with an 
\begin_inset Formula $n\times p$
\end_inset

 matrix using 
\begin_inset Formula $\Theta(mn+np+mp+mnp/\sqrt{Z})$
\end_inset

 misses, and can add two 
\begin_inset Formula $m\times n$
\end_inset

 matrices using 
\begin_inset Formula $\Theta(mn)$
\end_inset

 misses.
\end_layout

\begin_layout Enumerate
Suppose that 
\begin_inset Formula $n$
\end_inset

 is even and we have performed QR factorization (by some algorithm) on the
 
\emph on
first-half
\emph default
 
\begin_inset Formula $n/2$
\end_inset

 columns of 
\begin_inset Formula $A$
\end_inset

 to obtain an 
\begin_inset Formula $m\times(n/2)$
\end_inset

 matrix 
\begin_inset Formula $Q_{1}$
\end_inset

, and also on the 
\emph on
second-half
\emph default
 
\begin_inset Formula $n/2$
\end_inset

 columns 
\emph on
separately
\emph default
 to obtain an 
\begin_inset Formula $m\times(n/2)$
\end_inset

 matrix 
\begin_inset Formula $Q_{2}$
\end_inset

.
 Using 
\begin_inset Formula $Q_{1}$
\end_inset

 and 
\begin_inset Formula $Q_{2}$
\end_inset

 , describe how to (efficiently) find the 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\begin_inset Formula $Q$
\end_inset

 from the QR factorization of 
\begin_inset Formula $A$
\end_inset

, and give the number of cache misses (in 
\begin_inset Formula $\Theta$
\end_inset

 notation, ignoring constant factors).
\end_layout

\begin_layout Enumerate
Describe an algorithm to compute the 
\begin_inset Formula $Q$
\end_inset

 from the QR factorization of 
\begin_inset Formula $A$
\end_inset

 that has fewer than 
\begin_inset Formula $\Theta(mn^{2})$
\end_inset

 misses asymptotically, and give the number of cache misses (in 
\begin_inset Formula $\Theta$
\end_inset

 notation, ignoring constant factors).
 (You can describe either a cache-oblivious or blocked algorithm, but I
 find a recursive cache-oblivious algorithm easier.) You can assume that
 
\begin_inset Formula $n$
\end_inset

 is a power-of-2 size, for convenience.
\newpage

\end_layout

\begin_layout Subsection*
Problem 2: Lanczos (30 pts)
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $A$
\end_inset

 be a Hermitian 
\begin_inset Formula $m\times m$
\end_inset

 matrix with eigenvalues 
\begin_inset Formula $\lambda_{1},\lambda_{2},\cdots,\lambda_{m}$
\end_inset

 and corresponding orthonormal eigenvectors 
\begin_inset Formula $\hat{q}_{1},\hat{q}_{2},\ldots,\hat{q}_{m}$
\end_inset

.
 Consider the Lanczos algorithm applied to 
\begin_inset Formula $A$
\end_inset

:
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $\beta_{0}=0$
\end_inset

, 
\begin_inset Formula $q_{0}=0$
\end_inset

, 
\begin_inset Formula $b=\mbox{arbitrary}$
\end_inset

, 
\begin_inset Formula $q_{1}=b/\Vert b\Vert$
\end_inset


\end_layout

\begin_layout LyX-Code
for 
\begin_inset Formula $n=1,2,3,\dots$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $v=Aq_{n}$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $\alpha_{n}=q_{n}^{T}v$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $v\leftarrow v-\beta_{n-1}q_{n-1}-\alpha_{n}q_{n}$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $\beta_{n}=\Vert v\Vert$
\end_inset


\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $q_{n+1}=v/\beta_{n}$
\end_inset


\end_layout

\begin_layout Standard
After 
\begin_inset Formula $m$
\end_inset

 steps, recall that this gives a unitary matrix 
\begin_inset Formula $Q=(q_{1}q_{2}\cdots q_{m})$
\end_inset

 and a tridiagonal matrix 
\begin_inset Formula $T=\left(\begin{array}{cccc}
\alpha_{1} & \beta_{1}\\
\beta_{1} & \alpha_{2} & \beta_{2}\\
 & \beta_{2} & \alpha_{3} & \ddots\\
 &  & \ddots & \ddots\end{array}\right)$
\end_inset

 such that 
\begin_inset Formula $AQ=QT$
\end_inset

.
\end_layout

\begin_layout Standard
Suppose that the initial 
\begin_inset Formula $b$
\end_inset

 is orthogonal to one of the eigenvectors 
\begin_inset Formula $\hat{q}_{i}$
\end_inset

 corresponding to a simple (not repeated) eigenvalue 
\begin_inset Formula $\lambda_{i}$
\end_inset

.
 Explain why the Lanczos process must break down (
\begin_inset Formula $\beta_{n}=0$
\end_inset

 for some 
\begin_inset Formula $n$
\end_inset

) if it is carried out in 
\emph on
exact arithmetic
\emph default
 (no rounding), and the 
\begin_inset Formula $T_{n}$
\end_inset

 matrix (the 
\begin_inset Formula $n\times n$
\end_inset

 upper-left corner of 
\begin_inset Formula $T$
\end_inset

) at the 
\begin_inset Formula $n$
\end_inset

-th step (where breakdown occurs) cannot have an eigenvalue 
\begin_inset Formula $\lambda_{i}$
\end_inset

.
\end_layout

\begin_layout Subsection*
Problem 3: Backwards stability (30 pts)
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $A$
\end_inset

 be any invertible 
\begin_inset Formula $m\times m$
\end_inset

 matrix and 
\begin_inset Formula $b$
\end_inset

 be any vector in 
\begin_inset Formula $\mathbb{C}^{n}$
\end_inset

, and consider the function 
\begin_inset Formula $f(A,b)=A^{-1}b$
\end_inset

: that is, the function returning the solution to 
\begin_inset Formula $Ax=b$
\end_inset

.
 Now, consider the analogous function 
\begin_inset Formula $\tilde{f}(A,b)$
\end_inset

 implemented in floating-point arithmetic by a 
\series bold
backwards-stable
\series default
 algorithm, e.g.
 Gaussian elimination with partial pivoting, or Householder QR factorization.
 That is, if we let 
\begin_inset Formula $f(A,b)=x$
\end_inset

 (the solution: 
\begin_inset Formula $x$
\end_inset

 is the 
\emph on
output
\emph default
 in this case) and 
\begin_inset Formula $\tilde{f}(A,b)-f(A,b)=\delta x$
\end_inset

 (the rounding error in the solution), then there is some 
\begin_inset Formula $\delta A$
\end_inset

 and 
\begin_inset Formula $\delta b$
\end_inset

 where 
\begin_inset Formula $(A+\delta A)(x+\delta x)=b+\delta b$
\end_inset

 and 
\begin_inset Formula $\delta A$
\end_inset

 and 
\begin_inset Formula $\delta b$
\end_inset

 are ....
 (yadda yadda...you should know the precise definition by now).
\end_layout

\begin_layout Standard
Show that if 
\begin_inset Formula $\tilde{f}(A,b)$
\end_inset

 is backwards stable with respect to the inputs 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, then it must be backwards stable with respect to 
\begin_inset Formula $A$
\end_inset

 
\series bold
alone
\series default
.
 That is, find a small 
\begin_inset Formula $\delta A'=\Vert A\Vert O(\varepsilon_{\mbox{machine}})$
\end_inset

 such that 
\begin_inset Formula $(A+\delta A')(x+\delta x)=b$
\end_inset

.
\end_layout

\begin_layout Standard
(Hint: if you need to construct a matrix to turn one vector into another,
 you can always use a unitary rotation followed by a rescaling.
 And, of course, you can pick any convenient norm that you want, by the
 equivalence of norms.)
\end_layout

\end_body
\end_document
