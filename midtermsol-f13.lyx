#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble

\renewcommand{\vec}[1]{\mathbf{#1}}

\renewcommand{\labelenumi}{(\alph{enumi})}
\renewcommand{\labelenumii}{(\roman{enumii})}

\newcommand{\tr}{\operatorname{tr}}
\newcommand{\sign}{\operatorname{sign}}

\renewcommand{\span}[1]{\operatorname{span}\langle #1 \rangle}
\newcommand{\fl}{\operatorname{fl}}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
18.335 Midterm Solutions, Fall 2013
\end_layout

\begin_layout Subsection*
Problem 1: GMRES (20 points)
\end_layout

\begin_layout Enumerate
We assume 
\begin_inset Formula $A$
\end_inset

 is nonsingular, in which case 
\begin_inset Formula $A^{n}b\neq0$
\end_inset

 (except in the trivial case 
\begin_inset Formula $b=0$
\end_inset

, for which we already have an exact solution 
\begin_inset Formula $x=0$
\end_inset

 to 
\begin_inset Formula $Ax=b$
\end_inset

).
 Now, we are told to suppose 
\begin_inset Formula $A^{n}b\in\mathcal{K}_{n}\implies A^{n}b=\sum_{k<n}c_{k}A^{k}b$
\end_inset

 for some coefficients 
\begin_inset Formula $c_{k}$
\end_inset

.
 Let 
\begin_inset Formula $c_{\ell}$
\end_inset

 denote the first nonzero coefficient (i.e.
 
\begin_inset Formula $c_{\ell}\neq0$
\end_inset

 and 
\begin_inset Formula $c_{k}=0$
\end_inset

 for 
\begin_inset Formula $k<\ell$
\end_inset

; in most cases 
\begin_inset Formula $\ell=0$
\end_inset

).
 Then 
\begin_inset Formula $A^{n}b=\sum_{k=\ell}^{n-1}c_{k}A^{k}b$
\end_inset

 implies that we can solve for the 
\begin_inset Formula $A^{\ell}b$
\end_inset

 term as: 
\begin_inset Formula 
\[
A^{\ell}b=\frac{1}{c_{\ell}}\left(A^{n}b-\sum_{\ell<k<n}c_{k}A^{k}b\right)\implies b=A\left[\frac{1}{c_{\ell}}\left(A^{n-\ell-1}b-\sum_{\ell<k<n}c_{k}A^{k-\ell-1}b\right)\right].
\]

\end_inset

But we are solving 
\begin_inset Formula $b=Ax$
\end_inset

, and by inspection 
\begin_inset Formula 
\[
x=\frac{1}{c_{\ell}}\left(A^{n-\ell-1}b-\sum_{\ell<k<n}c_{k}A^{k-\ell-1}b\right)\in\mathcal{K}_{n},
\]

\end_inset

since 
\begin_inset Formula $0\leq k-\ell-1<n$
\end_inset

 (since 
\begin_inset Formula $\ell<k<n$
\end_inset

) and 
\begin_inset Formula $0\leq n-\ell-1<n$
\end_inset

 (since 
\begin_inset Formula $0\leq\ell<n$
\end_inset

).
 But if the exact solution 
\begin_inset Formula $x\in\mathcal{K}_{n}$
\end_inset

, then we can obtain the exact solution from 
\begin_inset Formula $Q_{n}$
\end_inset

 and we don't 
\emph on
need
\emph default
 to compute 
\begin_inset Formula $q_{n+1}$
\end_inset

.
 We are done, so breakdown is a good thing.
\end_layout

\begin_layout Enumerate
Suppose 
\begin_inset Formula $b$
\end_inset

 is a linear combination of 
\begin_inset Formula $n$
\end_inset

 of the eigenvectors of 
\begin_inset Formula $A$
\end_inset

.
 Then 
\begin_inset Formula $A^{k}b$
\end_inset

 will still be a linear combination of those eigenvectors for all 
\begin_inset Formula $k$
\end_inset

, and hence the Krylov space can never have dimension 
\begin_inset Formula $>n$
\end_inset

.
 So, we must break down on the 
\begin_inset Formula $n$
\end_inset

-th step, when breakdown must occur if we try to compute 
\begin_inset Formula $q_{n+1}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Technically, we must find 
\begin_inset Formula $n$
\end_inset

 eigenvectors with distinct eigenvalues in order for 
\begin_inset Formula $A^{k}b$
\end_inset

 to be linearly independent for 
\begin_inset Formula $k<n$
\end_inset

, i.e.
 for it to break down in exactly 
\begin_inset Formula $n$
\end_inset

 steps.
\end_layout

\begin_layout Subsection*
Problem 2: Conditioning (20 points)
\end_layout

\begin_layout Standard
The following parts can be solved 
\emph on
independently
\emph default
.
\end_layout

\begin_layout Enumerate
We want to avoid squareing the condition number of 
\begin_inset Formula $A$
\end_inset

.
 So, we compute the reduced QR factorization 
\begin_inset Formula $A=\hat{Q}\hat{R}$
\end_inset

 (Householder is the most efficient stable way), in which case 
\begin_inset Formula $A^{*}A=\hat{R}^{*}\hat{R}$
\end_inset

.
 Since 
\begin_inset Formula $A$
\end_inset

 is full-rank, 
\begin_inset Formula $\hat{R}$
\end_inset

 is a nonsingular 
\begin_inset Formula $n\times n$
\end_inset

 matrix.
 Hence 
\begin_inset Formula $C=(\hat{R}^{-1})^{*}\hat{R}^{-1}$
\end_inset

, and 
\begin_inset Formula $C_{ij}=e_{i}^{*}Ce_{j}=(\hat{R}^{-1}e_{i})^{*}(\hat{R}^{-1}e_{j})$
\end_inset

.
 Since 
\begin_inset Formula $\hat{R}$
\end_inset

 is upper-triangular, we can compute 
\begin_inset Formula $x_{i}=\hat{R}^{-1}e_{i}$
\end_inset

 efficiently by solving 
\begin_inset Formula $\hat{R}x_{i}=e_{i}$
\end_inset

 via backsubstitution.
\end_layout

\begin_layout Enumerate
From class, the condition number of 
\begin_inset Formula $f(x)=Ax$
\end_inset

 is simply 
\begin_inset Formula $\kappa(x)=\Vert A\Vert_{2}\Vert x\Vert_{2}/\Vert Ax\Vert_{2}$
\end_inset

, since the Jacobian is 
\begin_inset Formula $A$
\end_inset

.
 (I told you to use 
\begin_inset Formula $\Vert A\Vert_{F}$
\end_inset

 for the norm of 
\begin_inset Formula $A$
\end_inset

, but that really applies when you have a 
\emph on
choice
\emph default
 of norms, i.e.
 in the second part; in the condition-number formula you 
\emph on
must 
\emph default
use the induced norm of the Jacobian matrix.
 However, the question was a bit confusing here.)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

To get the condition number of 
\begin_inset Formula $f(A)=Ax$
\end_inset

, we first need to to get the Jacobian.
 Let'a define the input 
\begin_inset Formula $A$
\end_inset

 as a 
\begin_inset Quotes eld
\end_inset

1d
\begin_inset Quotes erd
\end_inset

 vector 
\begin_inset Formula $a$
\end_inset

 of length 
\begin_inset Formula $mn$
\end_inset

: 
\begin_inset Formula 
\[
a=\left(\begin{array}{c}
(A_{1,:})^{T}\\
(A_{2,:})^{T}\\
\vdots\\
(A_{m,:})^{T}
\end{array}\right),
\]

\end_inset

i.e.
 
\begin_inset Formula $a$
\end_inset

 consists of the rows of 
\begin_inset Formula $A$
\end_inset

 (transposed to column vectors), one after the other, in sequence.
 (i.e., row-major storage of 
\begin_inset Formula $A$
\end_inset

.) There are 
\begin_inset Formula $m$
\end_inset

 outputs 
\begin_inset Formula $f_{i}$
\end_inset

 of 
\begin_inset Formula $Ax$
\end_inset

, each one of which dots one row of 
\begin_inset Formula $A$
\end_inset

 with 
\begin_inset Formula $x$
\end_inset

.
 Hence, in terms of 
\begin_inset Formula $a$
\end_inset

, the 
\begin_inset Formula $m\times(mn)$
\end_inset

 Jacobian matrix looks like 
\begin_inset Formula 
\[
J=\left(\begin{array}{cccc}
x^{T}\\
 & x^{T}\\
 &  & \ddots\\
 &  &  & x^{T}
\end{array}\right).
\]

\end_inset

 Since this is block-diagonal, it is easy to figure out 
\begin_inset Formula $\sup_{z\neq0}\frac{\Vert Jz\Vert}{\Vert z\Vert}$
\end_inset

.
 Let's write 
\begin_inset Formula $z$
\end_inset

 as 
\begin_inset Formula 
\[
z=\left(\begin{array}{c}
x_{1}\\
x_{2}\\
\vdots\\
x_{m}
\end{array}\right)
\]

\end_inset

in terms of vectors 
\begin_inset Formula $x_{k}\in\mathbb{C}^{n}$
\end_inset

.
 Note that, under the Frobenius norm, 
\begin_inset Formula $\Vert A\Vert_{F}=\Vert z\Vert_{2}$
\end_inset

.
 Then 
\begin_inset Formula 
\[
\Vert J\Vert_{2}=\frac{\Vert Jz\Vert_{2}}{\Vert z\Vert_{2}}=\sqrt{\frac{|x^{T}x_{1}|^{2}+|x^{T}x_{2}|^{2}+\cdots+|x^{T}x_{m}|^{2}}{x_{1}^{*}x_{1}+x_{2}^{*}x_{2}+\cdots+x_{m}^{*}x_{m}},}
\]

\end_inset

which is clearly maximized when 
\begin_inset Formula $x_{k}=\alpha_{k}\bar{x}$
\end_inset

 (to maximize the dot products 
\begin_inset Formula $x^{T}x_{k}\to|\alpha_{k}|^{2}\Vert x\Vert_{2}^{2}$
\end_inset

 over all vectors 
\begin_inset Formula $x_{k}$
\end_inset

 of a given length) for some scalar 
\begin_inset Formula $\alpha_{k}\in\mathbb{C}$
\end_inset

, giving 
\begin_inset Formula $\Vert J\Vert_{2}=\Vert x\Vert_{2}\sqrt{\frac{\sum|\alpha_{k}|^{2}}{\sum|\alpha_{k}|^{2}}}=\Vert x\Vert_{2}.$
\end_inset

 Hence, the condition number is 
\begin_inset Formula $\kappa(A)=\frac{\Vert J\Vert}{\Vert Ax\Vert/\Vert A\Vert}=\frac{\Vert x\Vert_{2}\Vert A\Vert_{F}}{\Vert Ax\Vert_{2}},$
\end_inset

 which is almost exactly the same the condition number for 
\begin_inset Formula $f(x)=Ax$
\end_inset

 above, except that we substitute 
\begin_inset Formula $\Vert A\Vert_{F}$
\end_inset

 for 
\begin_inset Formula $\Vert A\Vert_{2}$
\end_inset

.
 Due to the equivalence of norms, however, this means that the condition
 numbers differ only by at most a constant factor independent of 
\begin_inset Formula $A$
\end_inset

 or 
\begin_inset Formula $x$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

(I asked you to use the Frobenius norm largely because it made it eaasier
 to compute the induced norm 
\begin_inset Formula $\Vert J\Vert_{2}$
\end_inset

 in the second part.
 Otherwise you would have had to convert 
\begin_inset Formula $z$
\end_inset

 back to a matrix and used the induced 
\begin_inset Formula $L_{2}$
\end_inset

 norm of 
\emph on
that
\emph default
 matrix for 
\begin_inset Formula $\Vert z\Vert$
\end_inset

 in the 
\emph on
denominator
\emph default
 of the 
\begin_inset Formula $\Vert J\Vert_{2}$
\end_inset

 formula.
 It's possible to work this out, but it seemed like an unnecessary amout
 of complexity to get something that differs only by a constant factor.
 The usual principle here is that, because of the equivalence of norms,
 we pick whatever norm is most convenient when we are discussing conditioning.)
\end_layout

\begin_layout Subsection*
Problem 3: QR updating (20 points).
\end_layout

\begin_layout Standard
Suppose you are given the QR factorization 
\begin_inset Formula $A=QR$
\end_inset

 of an 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\begin_inset Formula $A$
\end_inset

 (rank 
\begin_inset Formula $n<m$
\end_inset

).
 Describe an efficient 
\begin_inset Formula $O(m^{2}+n^{2})=O(m^{2})$
\end_inset

 algorithm to compute the QR factorization of a rank-1 update to 
\begin_inset Formula $A$
\end_inset

, that is to factorize 
\begin_inset Formula $A+uv^{*}=Q'R'$
\end_inset

 for some vectors 
\begin_inset Formula $u\in\mathbb{C}^{m}$
\end_inset

 and 
\begin_inset Formula $v\in\mathbb{C}^{n}$
\end_inset

, following these steps:
\end_layout

\begin_layout Enumerate
(Note that this applies to the full QR factorization, where 
\begin_inset Formula $Q$
\end_inset

 is an 
\begin_inset Formula $m\times m$
\end_inset

 unitary matrix, not to the reduced QR factorization with an 
\begin_inset Formula $m\times n$
\end_inset

 
\begin_inset Formula $\hat{Q}$
\end_inset

!) 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $Q'R'=A+uv^{*}=QR+uv^{*}=Q(R+zv^{*})$
\end_inset

 implies that 
\begin_inset Formula $Qz=u$
\end_inset

 or 
\begin_inset Formula $z=Q^{*}u$
\end_inset

.
 Multiplying an 
\begin_inset Formula $m\times m$
\end_inset

 matrix 
\begin_inset Formula $Q^{*}$
\end_inset

by the vector 
\begin_inset Formula $u$
\end_inset

 costs 
\begin_inset Formula $\Theta(m^{2})$
\end_inset

 operations.
\end_layout

\begin_layout Enumerate
The 
\begin_inset Formula $R+zv^{*}$
\end_inset

 matrix looks like this: 
\begin_inset Formula 
\[
R+zv^{*}=\left(\begin{array}{ccccc}
\times & \times & \times & \times & \times\\
 & \times & \times & \times & \times\\
 &  & \times & \times & \times\\
 &  &  & \times & \times\\
 &  &  &  & \times\\
\\
\\
\\
\\
\\
\end{array}\right)+\left(\begin{array}{cccc}
z\overline{v_{1}} & z\overline{v_{2}} & \cdots & z\overline{v_{n}}\end{array}\right).
\]

\end_inset

This means that, 
\emph on
below the diagonal
\emph default
 of 
\begin_inset Formula $R$
\end_inset

, the entries in 
\emph on
every column 
\emph default
are multiples of the 
\emph on
same
\emph default
 vector 
\begin_inset Formula $z$
\end_inset

.
 So, if we perform Givens rotations from the bottom up to introduce zeros
 into the 
\emph on
first
\emph default
 column, this rotation will also introduce zeros in 
\emph on
all
\emph default
 the columns 
\emph on
until the diagonal is reached
\emph default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

More specifically, you were asked to apply the Givens rotations that rotate
 
\begin_inset Formula $z$
\end_inset

 into a multiple of 
\begin_inset Formula $e_{1}$
\end_inset

, from the bottom up.
 As explained above, this will introduce zeros into each column of 
\begin_inset Formula $R+zv^{*}$
\end_inset

 until the diagonal is reached.
 In column 
\begin_inset Formula $k$
\end_inset

, this means it will introduce zeros until you get to the point of rotating
 rows 
\begin_inset Formula $k$
\end_inset

 and 
\begin_inset Formula $k+1$
\end_inset

.
 Because the 
\begin_inset Formula $(k,k)$
\end_inset

 entry contains 
\begin_inset Formula $R_{k,k}$
\end_inset

, the Givens rotation designed for 
\begin_inset Formula $z$
\end_inset

 will no longer work, and will leave 
\emph on
both
\emph default
 of these rows nonzero (and similarly for rows 
\begin_inset Formula $<k$
\end_inset

).
 Hence, the resulting matrix is
\series bold
 upper Hessenberg
\series default
 as desired (one nonzero below each diagonal).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

There is 
\begin_inset Formula $\Theta(m)$
\end_inset

 work required to rotate 
\begin_inset Formula $z$
\end_inset

 via 
\begin_inset Formula $m-1$
\end_inset

 Givens rotations, and 
\begin_inset Formula $\Theta(n^{2})$
\end_inset

 work required to apply these rotations to 
\begin_inset Formula $R+zv^{*}$
\end_inset

 starting from the diagonal rows.
 And hence 
\begin_inset Formula $\Theta(m+n^{2})$
\end_inset

 work overall; I don't mind if you ignore the 
\begin_inset Formula $\Theta(m)$
\end_inset

 term since it is negligible compared to the 
\begin_inset Formula $\Theta(m^{2})$
\end_inset

 term from part (a).
 (Naively, these Givens rotations to introduce zeros into the first column
 will require 
\begin_inset Formula $\Theta(mn)$
\end_inset

 work because of the cost of applying them to the other columns, but you
 don't actually have to perform the rotations of the other columns for rows
 
\begin_inset Formula $>n$
\end_inset

 since we know 
\emph on
a priori
\emph default
 that this will just introduce zeros.)
\end_layout

\begin_layout Enumerate
Given upper-Hessenberg form, we just need to apply one Givens rotation to
 each column (to rows 
\begin_inset Formula $k$
\end_inset

 and 
\begin_inset Formula $k+1$
\end_inset

 for column 
\begin_inset Formula $k$
\end_inset

) to restore tridiagonal form.
 There are 
\begin_inset Formula $n$
\end_inset

 columns, and on average 
\begin_inset Formula $\Theta(n)$
\end_inset

 work per rotation (since the rotation has to apply to all the columns 
\begin_inset Formula $\geq k$
\end_inset

), for 
\begin_inset Formula $\Theta(n^{2})$
\end_inset

 work overall.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

(You solved a very similar problem for homework, in the context of the upper-Hes
senberg GMRES least-squares problem.)
\end_layout

\end_body
\end_document
