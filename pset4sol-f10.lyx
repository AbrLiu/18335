#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble

\renewcommand{\vec}[1]{\mathbf{#1}}

\renewcommand{\labelenumi}{(\alph{enumi})}
\renewcommand{\labelenumii}{(\roman{enumii})}

\newcommand{\tr}{\operatorname{tr}}
\end_preamble
\use_default_options false
\language english
\inputencoding auto
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 2
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\topmargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section*
18.335 Problem Set 4 Solutions
\end_layout

\begin_layout Subsection*
Problem 1: Hessenberg ahead! (10+10+10 points)
\end_layout

\begin_layout Enumerate
(Essentially the same recurrence is explained in equation 30.8 in the text.)
 You can derive this recurrence relation by recalling the expression for
 determinants in terms of cofactors or minors that you should have learned
 in a previous linear-algebra course.
 In 
\begin_inset Formula $\det B$
\end_inset

, the coefficient the 
\begin_inset Formula $(i,j)$
\end_inset

 entry 
\begin_inset Formula $B_{ij}$
\end_inset

 is 
\begin_inset Formula $(-1)^{i+j}$
\end_inset

 multiplied by the determinant of the submatrix (minor) of 
\begin_inset Formula $B$
\end_inset

 with the 
\begin_inset Formula $i$
\end_inset

-th row and 
\begin_inset Formula $j$
\end_inset

-th column removed (this determinant, mutiplied by 
\begin_inset Formula $(-1)^{i+j}$
\end_inset

, is the 
\emph on
cofactor
\emph default
 of 
\begin_inset Formula $B_{ij}$
\end_inset

).
 The cofactor formula tells us that the determinant is equal to any row
 (or column) of 
\begin_inset Formula $B$
\end_inset

 multiplied by its cofactors.
 Take the last row of 
\begin_inset Formula $B$
\end_inset

, which has only two nonzero entries 
\begin_inset Formula $B_{mm}$
\end_inset

 and 
\begin_inset Formula $B_{m,m-1}$
\end_inset

.
 The cofactor of 
\begin_inset Formula $B_{mm}$
\end_inset

 is 
\begin_inset Formula $+\det B_{1:m-1,1:m-1}$
\end_inset

.
 The cofactor of 
\begin_inset Formula $B_{m,m-1}$
\end_inset

 is the 
\begin_inset Formula $-1$
\end_inset

 times the determinant of the matrix whose last column is all zeros except
 for 
\begin_inset Formula $B_{m-1,m}$
\end_inset

in the lower-right.
 To get the determinant of that matrix we take everything in that column
 and multiply by their cofactors; everythign is zero except for 
\begin_inset Formula $B_{m-1,m}$
\end_inset

, whose cofactor is 
\begin_inset Formula $+\det B_{1:m-2,1:m-2}$
\end_inset

.
 Putting these together, we have 
\begin_inset Formula $\det B=B_{m,m}\det B_{1:m-1,1:m-1}-B_{m-1,m}B_{m,m-1}\det B_{1:m-2,1:m-2}$
\end_inset

 as desired.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

This gives a three-term recurrence relation, since the determinant of each
 submatrix is given in terms of the the determinants of the two smaller
 submatrices.
 At each iteration, we only need the determinants of the submatrices of
 size 
\begin_inset Formula $n\times n$
\end_inset

 and 
\begin_inset Formula $(n-1)\times(n-1)$
\end_inset

 to get the determinant of the submatrix of size 
\begin_inset Formula $(n+1)\times(n+1)$
\end_inset

 using three multiplications and one addition, or four flops.
 We have to apply the recurrence 
\begin_inset Formula $m-1$
\end_inset

 times to get the full 
\begin_inset Formula $\det(H-zI)$
\end_inset

, for 
\begin_inset Formula $4(m-1)+m=O(m)$
\end_inset

 flops (where the 
\begin_inset Formula $+m$
\end_inset

 flops was for subtracting 
\begin_inset Formula $z$
\end_inset

 from the 
\begin_inset Formula $m$
\end_inset

 diagonals).
 The code is given in part (b) below (including the derivative.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

To test it, we computed a random 
\begin_inset Formula $H$
\end_inset

 matrix as suggested in the problem, for 
\begin_inset Formula $m=20$
\end_inset

, and computed the relative error 
\family typewriter
(evalpoly(H,z)-det(H-z*eye(m)))/det(H-z*eye(m))
\family default
 for a few randomly chosen values of 
\begin_inset Formula $z$
\end_inset

.
 The relative error was always on the order of the machine precision 
\begin_inset Formula $\approx10^{-16}$
\end_inset

.
\end_layout

\begin_layout Enumerate
If we simply take the derivative 
\begin_inset Formula $\frac{d}{dz}$
\end_inset

 of our recurrence relation for 
\begin_inset Formula $\det B$
\end_inset

, we get a three-term recurrence relation for 
\begin_inset Formula $(\det B)'$
\end_inset

: 
\begin_inset Formula \[
(\det B)'=-\det B_{1:m-1,1:m-1}+B_{m,m}(\det B_{1:m-1,1:m-1})'-B_{m-1,m}B_{m,m-1}(\det B_{1:m-2,1:m-2}),\]

\end_inset

using the fact that for 
\begin_inset Formula $B=H-zI$
\end_inset

 we have 
\begin_inset Formula $B'=-I$
\end_inset

 and hence 
\begin_inset Formula $B_{mm}'=-1$
\end_inset

 while 
\begin_inset Formula $B_{m-1,m}'=B_{m,m-1}'=0$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

This is implemented in the following Matlab function:
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "evalpoly.m"

\end_inset

If we choose 
\begin_inset Formula $\Delta z=10^{-4}$
\end_inset

, and compare 
\begin_inset Formula $[p(z+\Delta z)-p(z-\Delta z)]/2\Delta z$
\end_inset

 to 
\family typewriter
pderiv
\family default
 computed by this function for a random 
\begin_inset Formula $H$
\end_inset

 (as above) and for various random 
\begin_inset Formula $z\in[0,1]$
\end_inset

, then the relative difference is usually on the order of 
\begin_inset Formula $10^{-6}$
\end_inset

 or so.
 Decreasing 
\begin_inset Formula $\Delta z$
\end_inset

 to 
\begin_inset Formula $10^{-6}$
\end_inset

, the relative difference is around 
\begin_inset Formula $10^{-10}$
\end_inset

 or so; exactly the convergence of 
\begin_inset Formula $O(\Delta z^{2})$
\end_inset

that one would expect: Taylor expanding 
\begin_inset Formula $p(z+\Delta z)=p(z)+p'(z)\Delta z+p''(z)\Delta z^{2}/2+O(\Delta z^{3})$
\end_inset

, one finds 
\begin_inset Formula $[p(z+\Delta z)-p(z-\Delta z)]/2\Delta z=p'(z)+O(\Delta z^{2})$
\end_inset

.
 Of course, you can't make 
\begin_inset Formula $\Delta z$
\end_inset

 too small or you run into the limitations of floating-point precision (e.g.
 
\begin_inset Formula $\Delta z=10^{-20}$
\end_inset

 will just give zero for 
\begin_inset Formula $p(z+\Delta z)-p(z-\Delta z)$
\end_inset

 if 
\begin_inset Formula $z\sim1$
\end_inset

).
\end_layout

\begin_layout Enumerate
Newton's method is just the iteration 
\begin_inset Formula $z\leftarrow z-p(z)/p'(z)$
\end_inset

.
 You can do this 
\begin_inset Quotes eld
\end_inset

by hand
\begin_inset Quotes erd
\end_inset

 in Matlab, but I wrote a little Matlab script to repeat this until the
 answer stops changing to within 
\begin_inset Formula $10\epsilon_{\mbox{machine}}$
\end_inset

.
 (Better stopping criteria could be devised, but this works well enough
 for illustration purposes.)
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "newtpoly.m"

\end_inset

Applying this to my random 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 from above, I run 
\family typewriter
eig(A)
\family default
 to get the eigenvalues, and then execute the Newton solver with starting
 points that are somewhere nearby one of the eigenvalues (e.g.
 the eigenvalue rounded to two significant digits).
 You can run the command 
\family typewriter
format long
\family default
 to have Matlab print out values to 15 decimal places, to better see what
 is going on.
 A typical output is:
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "p2.out"

\end_inset

In comparison, the corresponding eigenvalue returned by 
\family typewriter
eig(A)
\family default
 is 
\begin_inset Formula $\lambda\approx0.961118806268619$
\end_inset

, which differs only in the 15th decimal place from the Newton result.
 If you repeat this with several eigenvalues (i.e., different starting points),
 you find that it consistently finds 
\begin_inset Formula $\lambda$
\end_inset

 to nearly machine precision.
 Notice that the number of accurate digits roughly doubles on each step,
 which is typical of Newton's method: this is 
\begin_inset Quotes eld
\end_inset

quadratic
\begin_inset Quotes erd
\end_inset

 convergence.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
If you tried a test case with a bigger value of 
\begin_inset Formula $m$
\end_inset

, say 
\begin_inset Formula $m=1000$
\end_inset

, you problably noticed a problem: the determinant grows so large that it
 overflows the range of floating-point arithmetic, leading to results of
 NaN or Inf! However, this is easily fixed.
 For example, as one is computing the determinant, one can periodically
 check the magnitude and rescale to prevent it from growing too large (or
 too small)---obviously, 
\begin_inset Formula $p(z)$
\end_inset

 multiplied by any constant still has the same roots.
 There are also slightly more clever recurrences that rescale the result
 automatically; See Barth, Martin, and Wilkinson (1967).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
W.
 Barth, R.
 S.
 Martin, and J.
 H.
 Wilkinson, 
\begin_inset Quotes eld
\end_inset

Calculation of the eigenvalues of a symmetric tridiagonal matrix by the
 bisection method,
\begin_inset Quotes erd
\end_inset

 
\emph on
Numer.
 Math.

\emph default
 
\series bold
9
\series default
, 386--393 (1967).
\end_layout

\end_inset

 The other key to finding eigenvalues in this way, described in lecture
 30 of Trefethen, is that there is a simple technique to count the number
 of eigenvalues in any given interval, leading to the 
\begin_inset Quotes eld
\end_inset

bisection
\begin_inset Quotes erd
\end_inset

 algorithm I mentioned in class.
 I didn't expect you to do any of that stuff however; I hope you all just
 picked a small enough 
\begin_inset Formula $m$
\end_inset

 to avoid overflow.
\end_layout

\begin_layout Subsection*
Problem 2: Q's `R us (10+15 points)
\end_layout

\begin_layout Enumerate
In finite precision, instead of 
\begin_inset Formula $w=A^{-1}v$
\end_inset

, we will get 
\begin_inset Formula $\tilde{w}=w+\delta w$
\end_inset

 where 
\begin_inset Formula $\delta w=-(A+\delta A)^{-1}\delta A\, w$
\end_inset

 (from the formula on page 95), where 
\begin_inset Formula $\delta A=O(\epsilon_{\mbox{machine}})\Vert A\Vert$
\end_inset

 is the backwards error.
 [Note that we cannot use 
\begin_inset Formula $\delta w\approx-A^{-1}\delta A\, w$
\end_inset

, which neglects the 
\begin_inset Formula $\delta A\delta w$
\end_inset

 terms, because in this case 
\begin_inset Formula $\delta w$
\end_inset

 is not small.] The key point, however, is to show that 
\begin_inset Formula $\delta w$
\end_inset

 is mostly parallel to 
\begin_inset Formula $q_{1}$
\end_inset

, the eigenvector corresponding to the smallest-magnitude eigenvalue 
\begin_inset Formula $\lambda_{1}$
\end_inset

 (it is given that all other eigenvalues have magnitude 
\begin_inset Formula $\geq|\lambda_{2}|\gg|\lambda_{1}|$
\end_inset

).
 Since 
\begin_inset Formula $w$
\end_inset

 is also mostly parallel to 
\begin_inset Formula $q_{1}$
\end_inset

, this will mean that 
\begin_inset Formula $\tilde{w}/\Vert\tilde{w}\Vert_{2}\approx q_{1}\approx w/\Vert w\Vert_{2}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

First, exactly as in our analysis of the power method, note that 
\begin_inset Formula $w=A^{-1}v=\alpha_{1}q_{1}[1+O(\lambda_{1}/\lambda_{2})]$
\end_inset

, since 
\begin_inset Formula $A^{-1}$
\end_inset

 amplifies the 
\begin_inset Formula $q_{1}$
\end_inset

 component of 
\begin_inset Formula $v$
\end_inset

 by 
\begin_inset Formula $1/|\lambda_{1}|$
\end_inset

 which is much bigger than the inverse of all the other eigenvalues.
 Thus, 
\begin_inset Formula $w/\Vert w\Vert_{2}=q_{1}[1+O(\lambda_{1}/\lambda_{2})]$
\end_inset

.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Second, if we Taylor-expand 
\begin_inset Formula $(A+\delta A)^{-1}$
\end_inset

 in powers of 
\begin_inset Formula $\delta A$
\end_inset

, i.e.
 in powers of 
\begin_inset Formula $\epsilon_{\mbox{machine}}$
\end_inset

, we obtain: 
\begin_inset Formula $(A+\delta A)^{-1}=A^{-1}-A^{-1}\delta A\, A^{-1}+O(\epsilon_{\mbox{machine }}^{2})$
\end_inset

.
 Since all of the terms in this expansion are proportional to 
\begin_inset Formula $A^{-1}$
\end_inset

, when multiplied by 
\emph on
any
\emph default
 vector they will again amplify the 
\begin_inset Formula $q_{1}$
\end_inset

 component much more than any other component.
 In particular, the vector 
\begin_inset Formula $\delta A\, w$
\end_inset

 is a vector in a random direction (since 
\begin_inset Formula $\delta A$
\end_inset

 comes from roundoff and is essentially random) and hence will have some
 nonzero 
\begin_inset Formula $q_{1}$
\end_inset

 component.
 Thus, 
\begin_inset Formula $\delta w=-(A+\delta A)^{-1}\delta A\, w=\beta_{1}q_{1}[1+O(\lambda_{1}/\lambda_{2})]$
\end_inset

 for some constant 
\begin_inset Formula $\beta_{1}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Putting these things together, we see that 
\begin_inset Formula $\tilde{w}=(\alpha_{1}+\beta_{1})q_{1}[1+O(\lambda_{1}/\lambda_{2})],$
\end_inset

 and hence 
\begin_inset Formula $\tilde{w}/\Vert\tilde{w}\Vert_{2}=q_{1}[1+O(\lambda_{1}/\lambda_{2})]=\frac{w}{\Vert w\Vert_{2}}[1+O(\lambda_{1}/\lambda_{2})]$
\end_inset

.
 Q.E.D.
\end_layout

\begin_layout Enumerate
Trefethen, problem 28.2:
\end_layout

\begin_deeper
\begin_layout Enumerate
In general, 
\begin_inset Formula $r_{ij}$
\end_inset

 is nonzero (for 
\begin_inset Formula $i<j$
\end_inset

) if column 
\begin_inset Formula $i$
\end_inset

 is non-orthogonal to column 
\begin_inset Formula $j$
\end_inset

.
 For a tridiagonal matrix 
\begin_inset Formula $A$
\end_inset

, only columns within two columns of one another are non-orthogonal (overlapping
 in the nonzero entries), so 
\begin_inset Formula $R$
\end_inset

 should only be nonzero (in general) for the diagonals and for two entries
 above each diagonal; i.e.
 
\begin_inset Formula $r_{ij}$
\end_inset

 is nonzero only for 
\begin_inset Formula $i=j$
\end_inset

, 
\begin_inset Formula $i=j-1$
\end_inset

, and 
\begin_inset Formula $i=j-2$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Each column of the 
\begin_inset Formula $Q$
\end_inset

 matrix involves a linear combination of all the previous columns, by induction
 (i.e.
 
\begin_inset Formula $q_{2}$
\end_inset

uses 
\begin_inset Formula $q_{1}$
\end_inset

, 
\begin_inset Formula $q_{3}$
\end_inset

uses 
\begin_inset Formula $q_{2}$
\end_inset

 and 
\begin_inset Formula $q_{1}$
\end_inset

, 
\begin_inset Formula $q_{4}$
\end_inset

 uses 
\begin_inset Formula $q_{3}$
\end_inset

 and 
\begin_inset Formula $q_{2}$
\end_inset

, 
\begin_inset Formula $q_{5}$
\end_inset

 uses 
\begin_inset Formula $q_{4}$
\end_inset

 and 
\begin_inset Formula $q_{3}$
\end_inset

, and so on).
 This means that an entry 
\begin_inset Formula $(i,j)$
\end_inset

 of 
\begin_inset Formula $Q$
\end_inset

 is zero (in general) only if 
\begin_inset Formula $a_{i,1:j}=0$
\end_inset

 (i.e., that entire row of 
\begin_inset Formula $A$
\end_inset

 is zero up to the 
\begin_inset Formula $j$
\end_inset

-th column).
 For the case of tridiagonal 
\begin_inset Formula $A$
\end_inset

, this means that 
\begin_inset Formula $Q$
\end_inset

 will have upper-Hessenberg form.
\end_layout

\begin_layout Enumerate

\series bold
Note:
\series default
 In the problem, you are told that 
\begin_inset Formula $A$
\end_inset

 is symmetric and tridiagonal.
 You must also assume that 
\begin_inset Formula $A$
\end_inset

 is real, or alternatively that 
\begin_inset Formula $A$
\end_inset

 is Hermitian and tridiagonal.
 (This is what must be meant in the problem, since tridiagonal matrices
 only arise in the QR method if the starting point is Hermitian.) In contrast,
 if 
\begin_inset Formula $A$
\end_inset

 is complex tridiagonal with 
\begin_inset Formula $A^{T}=A$
\end_inset

, the stated result is not true (
\begin_inset Formula $RQ$
\end_inset

 is not in general tridiagonal, as can easily be verified using a random
 tridiagonal complex 
\begin_inset Formula $A$
\end_inset

 in Matlab).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

It is sufficient to show that 
\begin_inset Formula $RQ$
\end_inset

 is upper Hessenberg: since 
\begin_inset Formula $RQ=Q^{*}AQ$
\end_inset

 and 
\begin_inset Formula $A$
\end_inset

 is Hermitian, then 
\begin_inset Formula $RQ$
\end_inset

 is Hermitian and upper-Hessenberg implies tridiagonal.
 To show that 
\begin_inset Formula $RQ$
\end_inset

 is upper-Hessenberg, all we need is the fact that 
\begin_inset Formula $R$
\end_inset

 is upper-triangular and 
\begin_inset Formula $Q$
\end_inset

 is upper-Hessenberg.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Consider the 
\begin_inset Formula $(i,j)$
\end_inset

 entry of 
\begin_inset Formula $RQ$
\end_inset

, which is given by 
\begin_inset Formula $\sum_{k}r_{i,k}q_{k,j}$
\end_inset

.
 
\begin_inset Formula $r_{i,k}=0$
\end_inset

 if 
\begin_inset Formula $i>k$
\end_inset

 since 
\begin_inset Formula $R$
\end_inset

 is upper triangular, and 
\begin_inset Formula $q_{k,j}=0$
\end_inset

 if 
\begin_inset Formula $k>j+1$
\end_inset

 since 
\begin_inset Formula $Q$
\end_inset

 is upper-Hessenberg, and hence 
\begin_inset Formula $r_{i,k}q_{k,j}\neq0$
\end_inset

 only when 
\begin_inset Formula $i\leq k\leq j+1$
\end_inset

, which is only true if 
\begin_inset Formula $i\leq j+1$
\end_inset

.
 Thus the 
\begin_inset Formula $(i,j)$
\end_inset

 entry of 
\begin_inset Formula $RQ$
\end_inset

 is zero if 
\begin_inset Formula $i>j+1$
\end_inset

 and thus 
\begin_inset Formula $RQ$
\end_inset

 is upper-Hessenberg.
\end_layout

\begin_layout Enumerate
As we saw in problem set 3 (Trefethen 10.4), the 
\begin_inset Formula $2\times2$
\end_inset

 Givens QR algorithm does elimination 
\begin_inset Quotes eld
\end_inset

bottom-up
\begin_inset Quotes erd
\end_inset

 on each column, introducing zeros one at a time in the current column of
 
\begin_inset Formula $A$
\end_inset

.
 Obviously, if 
\begin_inset Formula $A$
\end_inset

 is tridiagonal (or even just upper-Hessenberg), most of each column is
 already zero---we only need to introduce one zero into each column below
 the diagonal.
 Hence, for each column 
\begin_inset Formula $k$
\end_inset

 we only need to do 
\emph on
one
\emph default
 Givens rotation of the 
\begin_inset Formula $k$
\end_inset

-th and 
\begin_inset Formula $(k+1)$
\end_inset

-st rows.
 Each 
\begin_inset Formula $2\times2$
\end_inset

 Givens rotation requires 6 flops (multiping a 2-component vector by a 
\begin_inset Formula $2\times2$
\end_inset

 matrix), and we need to do it for all columns starting from the 
\begin_inset Formula $k$
\end_inset

-th.
 However, actually we only need to do it for 3 columns for each 
\begin_inset Formula $k$
\end_inset

, since from above the conversion from 
\begin_inset Formula $A$
\end_inset

 to 
\begin_inset Formula $R$
\end_inset

 only introduces one additional zero above each diagonal, so most of the
 Givens rotations in a given row are zero.
 That is, the process looks like
\begin_inset Formula \[
\left(\begin{array}{cccccc}
\cdot & \cdot\\
\cdot & \cdot & \cdot\\
 & \cdot & \cdot & \cdot\\
 &  & \cdot & \cdot & \cdot\\
 &  &  & \cdot & \cdot & \cdot\\
 &  &  &  & \cdot & \cdot\end{array}\right)\rightarrow\left(\begin{array}{cccccc}
\bullet & \bullet & \bullet\\
0 & \bullet & \bullet\\
 & \cdot & \cdot & \cdot\\
 &  & \cdot & \cdot & \cdot\\
 &  &  & \cdot & \cdot & \cdot\\
 &  &  &  & \cdot & \cdot\end{array}\right)\rightarrow\left(\begin{array}{cccccc}
\cdot & \cdot & \cdot\\
0 & \bullet & \bullet & \bullet\\
 & 0 & \bullet & \bullet\\
 &  & \cdot & \cdot & \cdot\\
 &  &  & \cdot & \cdot & \cdot\\
 &  &  &  & \cdot & \cdot\end{array}\right)\rightarrow\left(\begin{array}{cccccc}
\cdot & \cdot & \cdot\\
0 & \cdot & \cdot & \cdot\\
 & 0 & \bullet & \bullet & \bullet\\
 &  & 0 & \bullet & \bullet\\
 &  &  & \cdot & \cdot & \cdot\\
 &  &  &  & \cdot & \cdot\end{array}\right),\]

\end_inset

where 
\begin_inset Formula $\bullet$
\end_inset

 indicates the entries that change on each step.
 Notice that it gradually converts 
\begin_inset Formula $A$
\end_inset

 to 
\begin_inset Formula $R$
\end_inset

, with the two nonzero entries above each diagonal as explained above, and
 that each Givens rotation need only operate on three columns.
 Hence, only 
\begin_inset Formula $O(m)$
\end_inset

 flops are required, compared to 
\begin_inset Formula $O(m^{3})$
\end_inset

 for ordinary QR! [Getting the exact number requires more care that I won't
 bother with, since we can no longer sweep under the rug the 
\begin_inset Formula $O(m)$
\end_inset

 operations required to construct the 
\begin_inset Formula $2\times2$
\end_inset

 Givens or Householder matrix, etc.]
\end_layout

\end_deeper
\begin_layout Subsection*
Problem 3 (5+5+5+5+5 pts): 
\end_layout

\begin_layout Standard
The underlying point in this problem is that Arnoldi will only stop partway
 if the starting vector 
\begin_inset Formula $\vec{b}$
\end_inset

 is in the span of a subset of only 
\begin_inset Formula $n$
\end_inset

 of the eigenvectors.
 This is why multiplying by 
\begin_inset Formula $A$
\end_inset

 more than 
\begin_inset Formula $n$
\end_inset

 times does not give any new vectors, why the Ritz vectors are exact eigenvector
s (spanned by 
\begin_inset Formula $Q_{n}$
\end_inset

), and why 
\begin_inset Formula $A\vec{x}=\vec{b}$
\end_inset

 has a solution 
\begin_inset Formula $\vec{x}\in\mathcal{K}_{n}$
\end_inset

.
 These results are shown explicitly by algebraic manipulation below.
\end_layout

\begin_layout Enumerate
In this case, the 
\begin_inset Formula $q_{n+1}$
\end_inset

 vector is multiplied by a zero row in 
\begin_inset Formula $\tilde{H}_{n}$
\end_inset

, and we can simplify 33.13 to 
\begin_inset Formula $AQ_{n}=Q_{n}H_{n}$
\end_inset

.
 If we consider the full Hessenberg reduction, 
\begin_inset Formula $H=Q^{*}AQ$
\end_inset

, it must have a 
\begin_inset Quotes eld
\end_inset

block Schur
\begin_inset Quotes erd
\end_inset

 form: 
\begin_inset Formula \[
H=\left(\begin{array}{cc}
H_{n} & B\\
0 & H'\end{array}\right),\]

\end_inset

where 
\begin_inset Formula $H'$
\end_inset

 is an 
\begin_inset Formula $(m-n)\times(m-n)$
\end_inset

 upper-Hessenberg matrix and 
\begin_inset Formula $B\in\mathbb{C}^{n\times(m-n)}$
\end_inset

.
 (It is 
\emph on
not
\emph default
 necessarily the case that 
\begin_inset Formula $B=0$
\end_inset

; this is only true if 
\begin_inset Formula $A$
\end_inset

 is Hermitian.)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $Q_{n}$
\end_inset

 is a basis for 
\begin_inset Formula $\mathcal{K}_{n}$
\end_inset

, so any vector 
\begin_inset Formula $x\in\mathcal{K}_{n}$
\end_inset

 can be written as 
\begin_inset Formula $x=Q_{n}y$
\end_inset

 for some 
\begin_inset Formula $y\in\mathbb{C}^{n}$
\end_inset

.
 Hence, from above, 
\begin_inset Formula $Ax=AQ_{n}y=Q_{n}H_{n}y=Q_{n}(H_{n}y)\in\mathcal{K}_{n}$
\end_inset

.
 Q.E.D.
\end_layout

\begin_layout Enumerate
The 
\begin_inset Formula $(n+1)$
\end_inset

 basis vector, 
\begin_inset Formula $A^{n}b$
\end_inset

, is equal to 
\begin_inset Formula $A(A^{n-1}b)$
\end_inset

 where 
\begin_inset Formula $A^{n-1}b\in\mathcal{K}_{n}$
\end_inset

.
 Hence, from above, 
\begin_inset Formula $A^{n}b\in\mathcal{K}_{n}$
\end_inset

 and thus 
\begin_inset Formula $\mathcal{K}_{n+1}=\mathcal{K}_{n}$
\end_inset

.
 By induction, 
\begin_inset Formula $\mathcal{K}_{\ell}=\mathcal{K}_{n}$
\end_inset

 for 
\begin_inset Formula $\ell\geq n$
\end_inset

.
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $H_{n}y=\lambda y$
\end_inset

, then 
\begin_inset Formula $AQ_{n}y=Q_{n}H_{n}y=\lambda Q_{n}y$
\end_inset

, and hence 
\begin_inset Formula $\lambda$
\end_inset

 is an eigenvalue of 
\begin_inset Formula $A$
\end_inset

 with eigenvector 
\begin_inset Formula $Q_{n}y$
\end_inset

.
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $A$
\end_inset

 is nonsingular, then 
\begin_inset Formula $H_{n}$
\end_inset

 is nonsingular (if it had a zero eigenvalue, 
\begin_inset Formula $A$
\end_inset

 would too from above).
 Hence, noting that 
\begin_inset Formula $b$
\end_inset

 is proportional to the first column of 
\begin_inset Formula $Q_{n}$
\end_inset

, we have: 
\begin_inset Formula $x=A^{-1}b=A^{-1}Q_{n}e_{1}\Vert b\Vert=A^{-1}Q_{n}H_{n}H_{n}^{-1}e_{1}\Vert b\Vert=A^{-1}AQ_{n}H_{n}^{-1}e_{1}\Vert b\Vert=Q_{n}H_{n}^{-1}e_{1}\Vert b\Vert\in\mathcal{K}_{n}$
\end_inset

.
 Q.E.D.
\end_layout

\end_body
\end_document
