#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble

\renewcommand{\vec}[1]{\mathbf{#1}}

\renewcommand{\labelenumi}{(\alph{enumi})}
\renewcommand{\labelenumii}{(\roman{enumii})}

\newcommand{\tr}{\operatorname{tr}}
\newcommand{\sign}{\operatorname{sign}}

\renewcommand{\span}[1]{\operatorname{span}\langle #1 \rangle}
\newcommand{\fl}{\operatorname{fl}}

\usepackage{cancel}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 2
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 0.9in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
18.335 Midterm Solutions, Fall 2012
\end_layout

\begin_layout Subsection*
Problem 1: (25 points)
\end_layout

\begin_layout Standard
Note that your solutions in this problem don't require you to know how 
\begin_inset Formula $\sin$
\end_inset

, 
\begin_inset Formula $\ln$
\end_inset

, and 
\begin_inset Formula $\Gamma$
\end_inset

 are calculated on a computer, because the answers rely on properties of
 the 
\emph on
functions
\emph default
 (and of floating-point arithmetic in general, of course), not of the algorithms
 to compute the functions.
 (Contrary to what many students assumed, Taylor series are 
\emph on
not
\emph default
 the only way to compute special functions like this, nor are they usually
 the best way except in limiting cases, nor should you generally use the
 
\emph on
same
\emph default
 Taylor series for all 
\begin_inset Formula $x$
\end_inset

.)
\end_layout

\begin_layout Enumerate
The condition number of 
\begin_inset Formula $f(x)=\sin(x)$
\end_inset

 is 
\begin_inset Formula $\kappa(x)=\left|\frac{f'(x)}{f(x)/x}\right|=\left|x\frac{\cos x}{\sin x}\right|.$
\end_inset

 As 
\begin_inset Formula $x\to0$
\end_inset

, 
\begin_inset Formula $\kappa(x)\to1$
\end_inset

 (since 
\begin_inset Formula $\frac{\sin x}{x}\to1$
\end_inset

), so it is well conditioned near 
\begin_inset Formula $x=0$
\end_inset

 and we should expect an accurate answer is possible even if there is a
 small (relative) rounding error in 
\begin_inset Formula $x$
\end_inset

.
 In particular, the Taylor expansion of 
\begin_inset Formula $\sin x$
\end_inset

 near 
\begin_inset Formula $x=0$
\end_inset

 clearly becomes more and more accurate as 
\begin_inset Formula $x\to0$
\end_inset

, in which limit 
\begin_inset Formula $\sin x\approx x$
\end_inset

 and the function 
\begin_inset Formula $f(x)=x$
\end_inset

 can obviously be computed accurately (with the forward error approaching
 the relative error in 
\begin_inset Formula $x$
\end_inset

).
 On the other hand, 
\begin_inset Formula $x\to2\pi$
\end_inset

, 
\begin_inset Formula $\frac{\sin x}{x}\to0$
\end_inset

 and hence 
\begin_inset Formula $\kappa(x)\to\infty$
\end_inset

: the problem is ill-conditioned near 
\begin_inset Formula $2\pi$
\end_inset

 and a small forward error 
\emph on
may
\emph default
 not be possible, depending upon how we define the problem.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

In particular, if 
\begin_inset Formula $x$
\end_inset

 contains a small relative error, e.g.
 because it was rounded from a non-representable real number, then we should
 not expect a small forward error near 
\begin_inset Formula $2\pi$
\end_inset

: the large condition number means that a small error in 
\begin_inset Formula $x$
\end_inset

 produces a large error in 
\begin_inset Formula $\sin x$
\end_inset

.
 For example, for 
\begin_inset Formula $x=2\pi+\delta$
\end_inset

 with 
\begin_inset Formula $\delta\sim\epsilon_{\mbox{machine}}$
\end_inset

, a roundoff error to 
\begin_inset Formula $\tilde{x}=2\pi+\delta+\epsilon_{\mbox{machine}}$
\end_inset

 will roughly double the magnitude of 
\begin_inset Formula $\sin(x)$
\end_inset

, giving a relative error of order 
\begin_inset Formula $1$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

If the input 
\begin_inset Formula $x$
\end_inset

 is exactly computed in floating point, on the other hand then it is possible
 to compute an accurate answer.
 Suppose that we computed 
\begin_inset Formula $\sin(x)$
\end_inset

 near 
\begin_inset Formula $x=2\pi$
\end_inset

 by first computing 
\begin_inset Formula $y=x-2\pi$
\end_inset

 and then computing 
\begin_inset Formula $\sin y$
\end_inset

.
 If we naively computed 
\begin_inset Formula $y$
\end_inset

 by 
\begin_inset Formula $y=x\ominus\fl(2\pi)$
\end_inset

, we could easily get a large cancellation error in computing 
\begin_inset Formula $y$
\end_inset

 since 
\begin_inset Formula $2\pi$
\end_inset

 is not exactly representable.
 However, if we instead computed 
\begin_inset Formula $\fl(x-2\pi)=(x-2\pi)[1+O(\epsilon_{\mbox{machine}})]$
\end_inset

, e.g.
 by performing the subtraction in a higher precision, then we could obtain
 a small forward error in 
\begin_inset Formula $\sin y=\sin x$
\end_inset

.
\end_layout

\begin_layout Enumerate
For 
\begin_inset Formula $|x|<\epsilon_{\mbox{machine}}$
\end_inset

, 
\begin_inset Formula $1+x$
\end_inset

 will be rounded to 1 and hence 
\family typewriter
log(1+x)
\family default
 would give 0 (a relative error of 
\begin_inset Formula $1$
\end_inset

 for 
\begin_inset Formula $x\neq0$
\end_inset

!).
 Therefore, we need a specialzed 
\family typewriter
log1p(x)
\family default
 function if we wish to compute 
\begin_inset Formula $\ln(1+x)$
\end_inset

 accurately for small 
\begin_inset Formula $|x|$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Equivalently, the function 
\begin_inset Formula $\ln(y)$
\end_inset

 has a condition number 
\begin_inset Formula $\left|\frac{1/y}{\ln(y)/y}\right|$
\end_inset

 that diverges as 
\begin_inset Formula $y\to1$
\end_inset

, making it extraordinarily sensitive to rounding errors in computing the
 argument 
\begin_inset Formula $y=1+x$
\end_inset

, while the function 
\begin_inset Formula $f(x)=\ln(1+x)$
\end_inset

 has condition number 
\begin_inset Formula $\left|\frac{1/(1+x)}{\ln(1+x)/x}\right|\to1$
\end_inset

 as 
\begin_inset Formula $x\to0$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

A possible implementation might use the Taylor expansion 
\begin_inset Formula $\ln(1+x)=x-\frac{x^{2}}{2}+\frac{x^{3}}{3}-\frac{x^{4}}{4}+O(x^{5})$
\end_inset

 for small 
\begin_inset Formula $x$
\end_inset

, and compute 
\begin_inset Formula $\ln(1+x)$
\end_inset

 directly for larger 
\begin_inset Formula $x$
\end_inset

.
 e.g.
 
\begin_inset Formula 
\[
\mbox{log1p}(x)=\begin{cases}
x\left(1-x\left(\frac{1}{2}-x\left(\frac{1}{3}-\frac{x}{4}\right)\right)\right) & |x|<10^{-3}\\
\log(1+x) & \mbox{otherwise}
\end{cases},
\]

\end_inset

(where for extra niceness I evaluated 
\begin_inset Formula $x-\frac{x^{2}}{2}+\frac{x^{3}}{3}-\frac{x^{4}}{4}$
\end_inset

 by Horner's method).
 This four-term Taylor series should be accurate to machine precision for
 
\begin_inset Formula $|x|<10^{-3}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

[The problem is 
\emph on
not
\emph default
 points near (slightly bigger than) 
\begin_inset Formula $x=-1$
\end_inset

.
 If you want to compute 
\begin_inset Formula $\ln(1+x)$
\end_inset

 for such 
\begin_inset Formula $x$
\end_inset

, there is no way around the fact that you need to know 
\begin_inset Formula $1+x$
\end_inset

 accurately to know how close the argument of the log is to zero, and cancellati
on errors will force you to lose a lot of significant digits in finding
 
\begin_inset Formula $1+x$
\end_inset

 if 
\begin_inset Formula $x$
\end_inset

 is not exactly representable.
 A specialized log1p function won't help.
 Note also that if 
\begin_inset Formula $\operatorname{fl}(x)>-1$
\end_inset

, we will obtain 
\begin_inset Formula $1\oplus x>0$
\end_inset

 in exactly rounded floating-point arithmetic, so rounding won't change
 the domain of the function.]
\end_layout

\begin_layout Enumerate
The problem in this case is not roundoff errors, but overflow.
 Remember that floating-point uses a fixed number of digits for its exponent,
 so it cannot represent arbitrarily large numbers.
 (In double precision, the maximum magnitude is 
\begin_inset Formula $\approx10^{308}$
\end_inset

).
 The factorial function, and hence the 
\begin_inset Formula $\Gamma(x)$
\end_inset

 function, grows faster than exponentially with 
\begin_inset Formula $x$
\end_inset

, so for 
\begin_inset Formula $x\gtrsim172$
\end_inset

 it will overflow and simply give 
\begin_inset Formula $\infty$
\end_inset

.
 By defining a separate 
\family typewriter
gammaln(x)
\family default
 function, Matlab allows you to study the magnitude of the 
\begin_inset Formula $\Gamma$
\end_inset

 function for much larger 
\begin_inset Formula $x$
\end_inset

 (up to 
\begin_inset Formula $x\approx10^{305}$
\end_inset

).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Note that, if it weren't for overflow, there wouldn't necessarily be any
 severe accuracy problem with computing 
\begin_inset Formula $\ln\Gamma(x)$
\end_inset

 by computing 
\begin_inset Formula $\Gamma(x)$
\end_inset

 first.
 
\begin_inset Formula $\ln(x)$
\end_inset

 is well-conditioned for large 
\begin_inset Formula $x$
\end_inset

.
 The condition number of 
\begin_inset Formula $\Gamma(x)$
\end_inset

 does grow with 
\begin_inset Formula $x$
\end_inset

, but only relatively slowly (
\begin_inset Formula $\approx x\ln x$
\end_inset

), so it overflows long before it becomes badly conditioned.
\end_layout

\begin_layout Subsection*
Problem 2: (5+10+10 points)
\end_layout

\begin_layout Enumerate
A simple example would be 
\begin_inset Formula $\Vert(x,y)\Vert_{+}=\Vert x\Vert+\Vert y\Vert$
\end_inset

.
 Another would be 
\begin_inset Formula $\Vert(x,y)\Vert_{\max}=\max(\Vert x\Vert,\Vert y\Vert)$
\end_inset

.
 More examples are 
\begin_inset Formula $\Vert(x,y)\Vert_{p}=\sqrt[p]{\Vert x\Vert^{p}+\Vert y\Vert^{p}}$
\end_inset

 for any 
\begin_inset Formula $p\geq1$
\end_inset

.
 All of these clearly satisfy the positivity, scaling, and triangle properties
 of norms, inheriting those properties from the norms on 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 (combined with the same properties of the 
\begin_inset Formula $L_{p}$
\end_inset

 norm).
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mbox{Second}\implies\mbox{First}$
\end_inset

, but not the other way around.
 That is, the Second definition is a stronger requirement on 
\begin_inset Formula $\tilde{f}$
\end_inset

.
 [Note that, from class, equivalence of norms means that we only need to
 prove this for one choice of 
\begin_inset Formula $\Vert(x,y)\Vert$
\end_inset

 and it follows for all other choices of norm.]
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Suppose that 
\begin_inset Formula $\tilde{f}$
\end_inset

 is backwards stable in the Second sense.
 Then, using e.g.
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\Vert(x,y)\Vert_{\max}$
\end_inset

 from above, we have
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset Formula $\Vert\tilde{x}-x\Vert=\Vert x\Vert O(\epsilon_{\mbox{machine}})\leq\Vert(x,y)\Vert_{\max}O(\epsilon_{\mbox{machine}})$
\end_inset

 and 
\begin_inset Formula $\Vert\tilde{y}-y\Vert=\Vert y\Vert O(\epsilon_{\mbox{machine}})\leq\Vert(x,y)\Vert_{\max}O(\epsilon_{\mbox{machine}})$
\end_inset

.
 Hence 
\begin_inset Formula $\Vert(\tilde{x},\tilde{y})-(x,y)\Vert_{\max}=\max(\Vert\tilde{x}-x\Vert,\Vert\tilde{y}-y\Vert)=\Vert(x,y)\Vert_{\max}O(\epsilon_{\mbox{machine}})$
\end_inset

, and First follows.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The converse is not true, essentially because we can have 
\begin_inset Formula $\Vert x\Vert$
\end_inset

 arbitrarily small compared to 
\begin_inset Formula $\Vert(x,y)\Vert$
\end_inset

 by choosing 
\begin_inset Formula $\Vert x\Vert\ll\Vert y\Vert$
\end_inset

 (or vice versa).
 From 
\begin_inset Formula $\Vert\tilde{x}-x\Vert\leq\Vert(\tilde{x},\tilde{y})-(x,y)\Vert_{\max}=\Vert(x,y)\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

, we obtain 
\begin_inset Formula $\Vert\tilde{x}-x\Vert=\frac{\Vert(x,y)\Vert}{\Vert x\Vert}\Vert x\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

.
 However, it does not follow that 
\begin_inset Formula $\Vert\tilde{x}-x\Vert=\Vert x\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

, because the prefactor 
\begin_inset Formula $\frac{\Vert(x,y)\Vert}{\Vert x\Vert}$
\end_inset

 can be arbitrarily large, and we required the constants in 
\begin_inset Formula $O(\epsilon_{\mbox{machine}})$
\end_inset

 to be independent of 
\begin_inset Formula $x$
\end_inset

 (uniform convergence).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

More explicitly, let us construct a counterexample (
\emph on
not required
\emph default
).
 Consider 
\begin_inset Formula $f(x,A)=bx^{*}+A$
\end_inset

 for 
\begin_inset Formula $x\in\mathbb{C}^{n}$
\end_inset

, 
\begin_inset Formula $A\in\mathbb{C}^{n\times n}$
\end_inset

, and some fixed 
\begin_inset Formula $b\in\mathbb{C}^{n}$
\end_inset

.
 It is straightforward to show that this is backwards-stable in the First
 sense, by letting 
\begin_inset Formula $\tilde{x}=x$
\end_inset

 and 
\begin_inset Formula $\tilde{A}=\tilde{f}(x,A)-bx^{*}$
\end_inset

.
 i.e.
 
\begin_inset Formula $\tilde{A}_{ij}=(b_{i}\otimes x_{j}\oplus A_{ij})-b_{i}x_{j}=[b_{i}x_{j}(1+\epsilon_{1})+A_{ij}](1+\epsilon_{2})-b_{i}x_{j}=A_{ij}+b_{i}x_{j}[\epsilon_{1}+O(\epsilon_{\mbox{machine}}^{2})]+A_{ij}\epsilon_{2}$
\end_inset

, where 
\begin_inset Formula $|\epsilon_{1,2}|\leq\epsilon_{\mbox{machine}}$
\end_inset

.
 Hence 
\begin_inset Formula $|\tilde{A}_{ij}-A_{ij}|\leq(\Vert x\Vert_{\infty}+\Vert A\Vert_{\infty})O(\epsilon_{\mbox{machine}})$
\end_inset

 (where 
\begin_inset Formula $\Vert A\Vert_{\infty}=\max_{i,j}|A_{ij}|$
\end_inset

) and we have 
\begin_inset Formula $\Vert\tilde{A}-A\Vert_{\infty}=\Vert(x,A)\Vert_{+}O(\epsilon_{\mbox{machine}})$
\end_inset

.
 Hence it is backwards stable in the First sense.
 On the other hand, it is not backwards stable in the Second sense.
 Consider inputs 
\begin_inset Formula $A=0$
\end_inset

, in which case 
\begin_inset Formula $f(\tilde{x},A)$
\end_inset

 is rank
\begin_inset space ~
\end_inset

1 for any 
\begin_inset Formula $\tilde{x}$
\end_inset

, but 
\begin_inset Formula $\tilde{f}(x,A)$
\end_inset

 will not be rank
\begin_inset space ~
\end_inset

1 due to roundoff errors [similar to pset
\begin_inset space ~
\end_inset

2 problem 4(b)(ii)], and hence we 
\emph on
must
\emph default
 have 
\begin_inset Formula $\tilde{A}\neq A$
\end_inset

 in order to have 
\begin_inset Formula $f(\tilde{x},\tilde{A})=\tilde{f}(x,A)$
\end_inset

.
 But then 
\begin_inset Formula $\Vert\tilde{A}-\cancelto{0}{A}\Vert=\Vert\tilde{A}\Vert>\cancelto{0}{\Vert A\Vert}O(\epsilon_{\mbox{machine}})$
\end_inset

, and therefore it cannot satisfy the Second definition.
\end_layout

\begin_layout Enumerate
Choose 
\begin_inset Formula $\Vert(x,y)\Vert=\Vert x\Vert_{1}+\Vert y\Vert_{1}$
\end_inset

, in which case both the norm and the algorithm 
\begin_inset Formula $\tilde{f}(x,y)$
\end_inset

 are exactly equivalent to the summation studied and proved backwards stable
 in class, applied to a column vector 
\begin_inset Formula $\left(\begin{array}{c}
x\\
y
\end{array}\right)\in\mathbb{R}^{m+n}$
\end_inset

.
 So, it is stable in the First sense.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

In fact, it is stable in the Second sense as well! Since it is stable in
 the First sense, construct 
\begin_inset Formula $(\tilde{x},\tilde{y})$
\end_inset

 with 
\begin_inset Formula $f(\tilde{x},\tilde{y})=\tilde{f}(x,y)$
\end_inset

 and 
\begin_inset Formula $\Vert(\tilde{x},\tilde{y})-(x,y)\Vert_{\infty}=\Vert(x,y)\Vert_{\infty}O(\epsilon_{\mbox{machine}})$
\end_inset

 for 
\begin_inset Formula $\Vert(x,y)\Vert_{\infty}=\max(\Vert x\Vert_{\infty},\Vert y\Vert_{\infty})$
\end_inset

.
 Suppose 
\begin_inset Formula $\Vert x\Vert_{\infty}\geq\Vert y\Vert_{\infty}$
\end_inset

, then it follows that 
\begin_inset Formula $\Vert\tilde{x}-x\Vert_{\infty}\leq\Vert(\tilde{x},\tilde{y})-(x,y)\Vert_{\infty}=\Vert x\Vert_{\infty}O(\epsilon_{\mbox{machine}})$
\end_inset

, and we only need to prove the corresponding property for 
\begin_inset Formula $\tilde{y}-y$
\end_inset

, but unfortunately this is not true if 
\begin_inset Formula $\Vert y\Vert_{\infty}\ll\Vert x\Vert_{\infty}$
\end_inset

.
 Instead, let us construct a new pair 
\begin_inset Formula $(\tilde{x}',\tilde{y}')$
\end_inset

 with 
\begin_inset Formula $f(\tilde{x}',\tilde{y}')=f(\tilde{x},\tilde{y})=\tilde{f}(x,y)$
\end_inset

 by setting 
\begin_inset Formula $\tilde{y}'=y$
\end_inset

, and 
\begin_inset Formula $\tilde{x}'_{i}=\tilde{x}_{i}+\frac{\sum(\tilde{y}_{k}-y_{k})}{m}$
\end_inset

 for 
\begin_inset Formula $i=1,\ldots,m$
\end_inset

---that is, we have pushed all of the 
\begin_inset Formula $\tilde{y}-y$
\end_inset

 differences into 
\begin_inset Formula $\tilde{x}'$
\end_inset

, while keeping the sum the same.
 Then 
\begin_inset Formula $\Vert\tilde{y}'-y\Vert=0=\Vert y\Vert O(\mbox{\epsilon}_{\mbox{machine}})$
\end_inset

 and 
\begin_inset Formula $\Vert\tilde{x}'-x\Vert_{\infty}\leq\Vert\tilde{x}-x\Vert_{\infty}+\left|\frac{\sum(\tilde{y}_{k}-y_{k})}{m}\right|\leq\Vert\tilde{x}-x\Vert_{\infty}+\Vert\tilde{y}-y\Vert_{\infty}\leq2\Vert(\tilde{x},\tilde{y})-(x,y)\Vert_{\infty}=\Vert x\Vert_{\infty}O(\epsilon_{\mbox{machine}})$
\end_inset

.
 Similarly if 
\begin_inset Formula $\Vert x\Vert_{\infty}\leq\Vert y\Vert_{\infty}$
\end_inset

, except that we push all the 
\begin_inset Formula $\tilde{x}-x$
\end_inset

 differences into 
\begin_inset Formula $\tilde{y}'$
\end_inset

.
 Hence it is backwards stable in the Second sense.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

You could also use the analysis from pset
\begin_inset space ~
\end_inset

2 (or similar) to explicitly construct 
\begin_inset Formula $\tilde{x}$
\end_inset

 and 
\begin_inset Formula $\tilde{y}$
\end_inset

 and thereby prove stability in the Second (hence First) sense.
\end_layout

\begin_layout Subsection*
Problem 3: (25 points)
\end_layout

\begin_layout Standard
First, let us follow the hint and show that 
\begin_inset Formula $q_{k}=Q^{(n)}e_{k}$
\end_inset

 is in the span 
\begin_inset Formula $\langle x_{1},x_{2},\ldots,x_{k}\rangle$
\end_inset

 as 
\begin_inset Formula $n\to\infty$
\end_inset

.
 We will proceed by induction on 
\begin_inset Formula $k$
\end_inset

.
 Let 
\begin_inset Formula 
\[
v_{k}=A^{n}e_{k}=\sum_{i=1}^{m}c_{i}\lambda_{i}^{n}x_{i},
\]

\end_inset

where we have expanded 
\begin_inset Formula $e_{k}=\sum c_{i}x_{i}$
\end_inset

 in the basis of the eigenvectors; we can generically assume that 
\begin_inset Formula $c_{i}\neq0$
\end_inset

 for all 
\begin_inset Formula $i$
\end_inset

, so that 
\begin_inset Formula $v_{k}$
\end_inset

 is dominated as 
\begin_inset Formula $n\to\infty$
\end_inset

 by the terms with the biggest 
\begin_inset Formula $|\lambda|$
\end_inset

.
 
\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $k=1$
\end_inset

, 
\begin_inset Formula $q_{1}=v_{1}/\Vert v_{1}\Vert_{2}$
\end_inset

 (via Gram-Schmidt), and since 
\begin_inset Formula $v_{1}\approx c_{1}\lambda_{1}^{n}x_{1}$
\end_inset

 as 
\begin_inset Formula $n\to\infty$
\end_inset

 we have 
\begin_inset Formula $q_{1}\to x_{1}$
\end_inset

.
\end_layout

\begin_layout Itemize
Suppose 
\begin_inset Formula $q_{i}\in\langle x_{1},\ldots,x_{i}\rangle$
\end_inset

 for 
\begin_inset Formula $i<k$
\end_inset

, and prove for 
\begin_inset Formula $k$
\end_inset

.
 For large 
\begin_inset Formula $n$
\end_inset

, 
\begin_inset Formula 
\[
v_{k}\approx\sum_{i\leq k}c_{i}\lambda_{i}^{n}x_{i}\in\langle x_{1},\ldots,x_{k}\rangle,
\]

\end_inset

where we have discarded the 
\begin_inset Formula $i>k$
\end_inset

 terms as negligible.
 We obtain 
\begin_inset Formula $q_{k}$
\end_inset

 from 
\begin_inset Formula $v_{k}$
\end_inset

 by Gram-Schmidt: 
\begin_inset Formula 
\[
q_{k}=\frac{v_{k}-\sum_{i<k}q_{i}q_{i}^{*}v_{k}}{\Vert\cdots\Vert_{2}}.
\]

\end_inset

However, since all of the terms in the numerator are 
\begin_inset Formula $\in\langle x_{1},\ldots,x_{k}\rangle$
\end_inset

, the result follows.
 (Note that the orthonormality of the 
\begin_inset Formula $q$
\end_inset

's means that 
\begin_inset Formula $q_{k}$
\end_inset

 must contain a nonnegligible 
\begin_inset Formula $x_{k}$
\end_inset

 component, as otherwise it would be in the span of the 
\begin_inset Formula $q_{i}$
\end_inset

 for 
\begin_inset Formula $i<k$
\end_inset

.)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

It is instructive (but not strictly necessary!) to look at this more carefully.
 Since the 
\begin_inset Formula $q_{i}$
\end_inset

 for 
\begin_inset Formula $i<k$
\end_inset

, being independent, necessarily form a 
\emph on
basis
\emph default
 for the 
\begin_inset Formula $(k-1)$
\end_inset

 subspace 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\langle x_{1},\ldots,x_{k-1}\rangle$
\end_inset

, it follows that 
\begin_inset Formula $(I-\sum_{i<k}q_{i}q_{i}^{*})x_{j}=0$
\end_inset

 for 
\begin_inset Formula $j<k$
\end_inset

 (since we are projecting orthogonal to the whole 
\begin_inset Formula $\langle x_{1},\ldots,x_{k}\rangle$
\end_inset

 subspace).
 Hence, 
\begin_inset Formula 
\[
q_{k}\approx\frac{\cancel{c_{k}\lambda_{k}^{n}}\left[x_{k}-\sum_{i<k}q_{i}q_{i}^{*}x_{k}\right]}{\Vert\cdots\Vert_{2}}\in\langle x_{1},\ldots,x_{k}\rangle.
\]

\end_inset

So, like in class, 
\begin_inset Formula $q_{k}$
\end_inset

 still picks up contributions only from the 
\begin_inset Formula $\lambda_{k}^{n}$
\end_inset

 term in 
\begin_inset Formula $v_{k}$
\end_inset

, as all of the larger 
\begin_inset Formula $|\lambda|$
\end_inset

 terms are cancelled by the projection.
 (At least, in exact arithmetic, but fortunately the QR iteration gives
 us the same result without the ill-conditioning.) Unlike the Hermitian case
 in class, however, 
\begin_inset Formula $q_{i}^{*}x_{k}\neq0$
\end_inset

 in general, so 
\begin_inset Formula $q_{k}$
\end_inset

 generally has nonzero 
\begin_inset Formula $x_{i}$
\end_inset

 components for 
\begin_inset Formula $i<k$
\end_inset

.
\end_layout

\begin_layout Standard
Now that we have proven this fact, the result is easy.
 Since 
\begin_inset Formula $q_{k}\in\langle x_{1},\ldots,x_{k}\rangle$
\end_inset

, it immediately follows that 
\begin_inset Formula $Aq_{k}\in\langle x_{1},\ldots,x_{k}\rangle=\langle q_{1},\ldots q_{k}\rangle$
\end_inset

, and thus 
\begin_inset Formula $T_{ij}=q_{i}^{*}Aq_{k}=0$
\end_inset

 for 
\begin_inset Formula $i>k$
\end_inset

.
 Hence 
\begin_inset Formula $T=Q^{*}AQ$
\end_inset

 is upper triangular, and we have a Schur factorization of 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\end_body
\end_document
