#LyX 1.5.5 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass article
\begin_preamble

\renewcommand{\vec}[1]{\mathbf{#1}}

\renewcommand{\labelenumi}{(\alph{enumi})}
\renewcommand{\labelenumii}{(\roman{enumii})}

\newcommand{\tr}{\operatorname{tr}}
\end_preamble
\language english
\inputencoding auto
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 2
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\topmargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section*
18.335 Problem Set 4
\end_layout

\begin_layout Standard
Due Monday, 26 October 2009.
\end_layout

\begin_layout Subsection*
Problem 1: Hessenberg ahead!
\end_layout

\begin_layout Standard
In class, we described an algorithm to find the Hessenberg factorization
 
\begin_inset Formula $A=QHQ^{*}$
\end_inset

 of an arbitrary matrix 
\begin_inset Formula $A$
\end_inset

, where 
\begin_inset Formula $H$
\end_inset

 is upper-triangular plus nonzero elements just below the diagonal, and
 
\begin_inset Formula $H$
\end_inset

 has the same eigenvalues as 
\begin_inset Formula $A$
\end_inset

.
 Suppose 
\begin_inset Formula $A$
\end_inset

 is Hermitian, in which case 
\begin_inset Formula $H$
\end_inset

 is Hermitian and tridiagonal.
 Given the Hessenberg factorization 
\begin_inset Formula $H$
\end_inset

, we mentioned in class that many things become much easier, e.g.
 we can evaluate 
\begin_inset Formula $p(z)=\det(A-zI)=\det(H-zI)$
\end_inset

 in 
\begin_inset Formula $O(m)$
\end_inset

 operations for a given 
\begin_inset Formula $z$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $B$
\end_inset

 be an arbitrary 
\begin_inset Formula $m\times m$
\end_inset

 tridiagonal matrix.
 Argue that 
\begin_inset Formula $\det B=B_{m,m}\det B_{1:m-1,1:m-1}-B_{m-1,m}B_{m,m-1}\det B_{1:m-2,1:m-2}.$
\end_inset

.
 Use this recurrence relation to write a Matlab function 
\family typewriter
evalpoly.m
\family default
 that evaluates 
\begin_inset Formula $p(z)$
\end_inset

 in 
\begin_inset Formula $O(m)$
\end_inset

 time, given the tridiagonal 
\begin_inset Formula $H$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

 as arguments.
 Check that your function works by comparing it to computing 
\begin_inset Formula $\det(H-zI)$
\end_inset

 directly with the Matlab 
\family typewriter
det
\family default
 function.
\end_layout

\begin_layout Enumerate
Explain how, given the tridiagonal 
\begin_inset Formula $H$
\end_inset

, we can compute also the derivative 
\begin_inset Formula $p'(z)$
\end_inset

 for a given 
\begin_inset Formula $z$
\end_inset

 in 
\begin_inset Formula $O(m)$
\end_inset

 operations.
 (
\emph on
Not
\emph default
 the coefficients of the polynomial 
\begin_inset Formula $p'$
\end_inset

, just its value at 
\begin_inset Formula $z$
\end_inset

!).
 Modify your evalpoly.m routine to return both 
\begin_inset Formula $p(z)$
\end_inset

 and its derivative 
\begin_inset Formula $p'(z)$
\end_inset

.
 That is, your function should look like:
\newline

\family typewriter
[p,pderiv] = evalpoly(H,z)
\newline
......compute p, pderiv.....
\family default

\newline
Check that your function works by comparing your 
\begin_inset Formula $p'(z)$
\end_inset

 to 
\begin_inset Formula $[p(z+\Delta z)-p(z-\Delta z)]/2\Delta z$
\end_inset

 for various 
\begin_inset Formula $z$
\end_inset

 and small 
\begin_inset Formula $\Delta z$
\end_inset

.
\end_layout

\begin_layout Enumerate
Using your function evalpoly, implement Newton's method to compute some
 eigenvalues of a random real-symmetric matrix, and compare them to those
 returned by Matlab's eig function---how many significant digits of accuracy
 do you get?
\newline

\newline
That is, to get a random real-symmetric 
\begin_inset Formula $A$
\end_inset

, compute 
\family typewriter
X=rand(m); A=X'*X;
\family default
 ....
 then, compute 
\family typewriter
H=hess(A);
\family default
 to get 
\begin_inset Formula $H$
\end_inset

.
 Then compute the eigenvalues with 
\family typewriter
eig(A)
\family default
, and apply Newton's method starting at a few different points to converge
 to some different eigenvalues.
\end_layout

\begin_layout Subsection*
Problem 2: Q's `R us
\end_layout

\begin_layout Enumerate
Trefethen, problem 27.5
\end_layout

\begin_layout Enumerate
Trefethen, problem 28.2
\end_layout

\begin_layout Subsection*
Problem 3: 
\end_layout

\begin_layout Standard
Trefethen, problem 33.2.
\end_layout

\begin_layout Subsection*
Reminder: final project proposals
\end_layout

\begin_layout Standard
A half-page final-project proposal is due on October 30, outlining the goal
 and scope of your proposed paper.
 Problems motivated by your research are perfectly fine, although you shouldn't
 simply recycle something you've already done.
 The only restriction is that, since PDEs are covered in 18.336 and other
 courses, I don't want projects where the primary focus is how to discretize
 the PDE (e.g.
 no projects on discontinuous Galerkin methods or stable time-stepping,
 please).
 It is fine to take a discretized PDE as 
\emph on
input
\emph default
, however, and then work on solvers, preconditioning, optimization, etcetera.
 Methods for ODEs are also fair game (especially recent developments that
 go beyond classic Runge-Kutta).
 One source of ideas might be to thumb through a copy of 
\emph on
Numerical Recipes
\emph default
 or a similar book and find a topic that interests you.
 Then go read some recent review papers on that topic (overview books like
 
\emph on
Numerical Recipes
\emph default
 are not always trustworthy guides to a specific field).
\end_layout

\end_body
\end_document
