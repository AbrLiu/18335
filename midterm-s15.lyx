#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble

\renewcommand{\vec}[1]{\mathbf{#1}}

\renewcommand{\labelenumi}{(\alph{enumi})}
\renewcommand{\labelenumii}{(\roman{enumii})}

\newcommand{\tr}{\operatorname{tr}}
\newcommand{\sign}{\operatorname{sign}}

\renewcommand{\span}[1]{\operatorname{span}\langle #1 \rangle}
\newcommand{\fl}{\operatorname{fl}}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
18.335 Midterm, Spring 2015
\end_layout

\begin_layout Subsection*
Problem 1: (10+(10+10) points)
\end_layout

\begin_layout Enumerate
Suppose you have a forwards-stable algorithm 
\begin_inset Formula $\tilde{f}$
\end_inset

 to compute 
\begin_inset Formula $f(x)\in\mathbb{R}$
\end_inset

 for 
\begin_inset Formula $x\in\mathbb{R}$
\end_inset

, i.e.
 
\begin_inset Formula $\Vert\tilde{f}(x)-f(x)\Vert=\Vert f\Vert O(\epsilon_{\mbox{mach}})$
\end_inset

.
 Suppose 
\begin_inset Formula $f$
\end_inset

 is bounded below and analytic (has a convergent Taylor series) everywhere;
 suppose it has some global minimum 
\begin_inset Formula $f_{\min}>0$
\end_inset

 at 
\begin_inset Formula $x_{\min}$
\end_inset

.
 Suppose that we compute 
\begin_inset Formula $x_{\min}$
\end_inset

 in floating-point arithmetic by exhaustive search: we just evaluate 
\begin_inset Formula $\tilde{f}$
\end_inset

 for all 
\begin_inset Formula $x\in\mathbb{F}$
\end_inset

 and return the 
\begin_inset Formula $x$
\end_inset

 where 
\begin_inset Formula $\tilde{f}$
\end_inset

 is smallest.
 Is this procedure stable or unstable? Why? (Hint: look at a Taylor series
 of 
\begin_inset Formula $f$
\end_inset

.)
\end_layout

\begin_layout Enumerate
Consider the function 
\begin_inset Formula $f(x)=Ax$
\end_inset

 where 
\begin_inset Formula $A\in\mathbb{C}^{m\times n}$
\end_inset

 is an 
\begin_inset Formula $m\times n$
\end_inset

 matrix.
\end_layout

\begin_deeper
\begin_layout Enumerate
In class, we proved that naive summation (by the obvious in-order loop)
 is stable, and in the book it was similarly proved that the function 
\begin_inset Formula $g(x)=b^{T}x$
\end_inset

 (dot products of 
\begin_inset Formula $x$
\end_inset

 with 
\begin_inset Formula $\bar{b}$
\end_inset

) is backwards stable for 
\begin_inset Formula $x\in\mathbb{C}^{n}$
\end_inset

 when computed in the obvious loop 
\begin_inset Formula $\tilde{g}$
\end_inset

 [that is: for each 
\begin_inset Formula $x$
\end_inset

 there exists an 
\begin_inset Formula $\tilde{x}$
\end_inset

 such that 
\begin_inset Formula $\tilde{g}(x)=g(\tilde{x})$
\end_inset

 and 
\begin_inset Formula $\Vert\tilde{x}-x\Vert=\Vert x\Vert O(\epsilon_{\mbox{mach}})$
\end_inset

].
 Your friend Simplicio points out that each component 
\begin_inset Formula $f_{i}$
\end_inset

 of 
\begin_inset Formula $f(x)$
\end_inset

 is simply a dot product 
\begin_inset Formula $f_{i}(x)=a_{i}^{T}x$
\end_inset

 (where 
\begin_inset Formula $a_{i}^{T}$
\end_inset

 is the 
\begin_inset Formula $i$
\end_inset

-th row of 
\begin_inset Formula $A$
\end_inset

)—so, he argues, since each component of 
\begin_inset Formula $f$
\end_inset

 is backwards stable, 
\begin_inset Formula $f(x)$
\end_inset

 must be backwards stable (when computed by the same obvious dot-product
 loop for each component).
 What is wrong with this argument (assuming 
\begin_inset Formula $m>1$
\end_inset

)?
\end_layout

\begin_layout Enumerate
Give an example 
\begin_inset Formula $A$
\end_inset

 for which 
\begin_inset Formula $f(x)$
\end_inset

 is definitely 
\emph on
not 
\emph default
backwards stable for the obvious 
\begin_inset Formula $\tilde{f}$
\end_inset

 algorithm.
\end_layout

\end_deeper
\begin_layout Subsection*
Problem 2: (10+10+10 points)
\end_layout

\begin_layout Standard
In figure
\begin_inset space ~
\end_inset

1 are shown, from class, the classical/modified Gram--Schmidt (CGS/MGS)
 and Householder algorithms to compute the QR factorization 
\begin_inset Formula $A=\hat{Q}\hat{R}$
\end_inset

 (reduced: 
\begin_inset Formula $\hat{Q}$
\end_inset

 is 
\begin_inset Formula $m\times n$
\end_inset

) or 
\begin_inset Formula $A=QR$
\end_inset

 (
\begin_inset Formula $Q$
\end_inset

 is 
\begin_inset Formula $m\times m$
\end_inset

) respectively of an 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\begin_inset Formula $A$
\end_inset

.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename midterm-s15-fig1a.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename midterm-s15-fig1b.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Left: Classical/Modified Gram-Schmidt algorithm.
 Right: Householder QR algorithm.
 (Figures borrowed from Per Persson's 18.335 slides.)
\end_layout

\end_inset


\end_layout

\end_inset

 Recall that, using the QR factorization, we can solve the least-squares
 problem 
\begin_inset Formula $\min\Vert Ax-b\Vert_{2}$
\end_inset

 by 
\begin_inset Formula $\hat{R}\hat{x}=\hat{Q}^{*}b$
\end_inset

.
 Recall that we can compute the right-hand side 
\begin_inset Formula $\hat{Q}^{*}b$
\end_inset

 by forming an augmented 
\begin_inset Formula $m\times(n+1)$
\end_inset

 matrix 
\begin_inset Formula $\breve{A}=(A,b)$
\end_inset

, finding its QR factorization 
\begin_inset Formula $\breve{A}=\breve{Q}\breve{R}$
\end_inset

 and obtaining 
\begin_inset Formula $\hat{Q}^{*}b$
\end_inset

 from the last column of 
\begin_inset Formula $\breve{R}=\breve{Q}^{*}\breve{A}$
\end_inset

.
 Explain whether this procedure is better than computing 
\begin_inset Formula $\hat{Q}^{*}b$
\end_inset

 directly for:
\end_layout

\begin_layout Enumerate
Classical Gram--Schmidt.
\end_layout

\begin_layout Enumerate
Modified Gram--Schmidt.
\end_layout

\begin_layout Enumerate
Householder QR.
 (Recall that, for Householder QR, we don't actually compute 
\begin_inset Formula $Q$
\end_inset

 explicitly, but instead store the reflectors 
\begin_inset Formula $v_{k}$
\end_inset

 and re-use them as needed to multiply by 
\begin_inset Formula $Q$
\end_inset

 or 
\begin_inset Formula $Q^{*}$
\end_inset

.)
\end_layout

\begin_layout Standard
That is, each of the above three algorithms computes the QR factorization
 of 
\begin_inset Formula $A$
\end_inset

—for 
\emph on
each
\emph default
 of the three algorithms is it an improvement to compute 
\begin_inset Formula $\hat{Q}^{*}b$
\end_inset

 via 
\emph on
that
\emph default
 algorithm on 
\begin_inset Formula $\breve{A}$
\end_inset

 compared with computing 
\begin_inset Formula $\hat{Q}$
\end_inset

 (or its equivalent) by 
\emph on
that
\emph default
 algorithm and 
\emph on
then
\emph default
 performing the 
\begin_inset Formula $\hat{Q}^{*}b$
\end_inset

 multiplication?
\end_layout

\begin_layout Subsection*
Problem 3: (10+20+10 points)
\end_layout

\begin_layout Standard
Suppose 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are 
\begin_inset Formula $m\times m$
\end_inset

 matrices, 
\begin_inset Formula $A=A^{*}$
\end_inset

, 
\begin_inset Formula $B=B^{*}$
\end_inset

, and 
\begin_inset Formula $B$
\end_inset

 is positive-definite.
 Consider the 
\begin_inset Quotes eld
\end_inset

generalized
\begin_inset Quotes erd
\end_inset

 eigenproblem of finding solutions 
\begin_inset Formula $x\neq0$
\end_inset

 and 
\begin_inset Formula $\lambda$
\end_inset

 to 
\begin_inset Formula $Ax=\lambda Bx$
\end_inset

, or equivalently solve the ordinary eigenproblem 
\begin_inset Formula $B^{-1}Ax=\lambda x$
\end_inset

.
 (In general, 
\begin_inset Formula $B^{-1}A$
\end_inset

 is 
\emph on
not
\emph default
 Hermitian.) Suppose that there are 
\begin_inset Formula $m$
\end_inset

 distinct eigenvalues 
\begin_inset Formula $|\lambda_{1}|>|\lambda_{2}|>\cdots>|\lambda_{m}|$
\end_inset

 and corresponding eigenvectors 
\begin_inset Formula $x_{1},\ldots,x_{m}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Show that the 
\begin_inset Formula $\lambda_{k}$
\end_inset

 are real and that 
\begin_inset Formula $x_{i}^{*}Bx_{j}=0$
\end_inset

 for 
\begin_inset Formula $i\neq j$
\end_inset

.
 (Hint: multiply both sides of 
\begin_inset Formula $Ax=\lambda Bx$
\end_inset

 by 
\begin_inset Formula $x^{*}$
\end_inset

, similar to the derivation for Hermitian problems in class.)
\end_layout

\begin_layout Enumerate
Explain how to generalize the modified Gram--Schmidt algorithm (figure 1)
 to compute an 
\begin_inset Quotes eld
\end_inset

SR
\begin_inset Quotes erd
\end_inset

 factorization 
\begin_inset Formula $B^{-1}A=SR$
\end_inset

 where 
\begin_inset Formula $S^{*}BS=I$
\end_inset

.
 (That is, the columns 
\begin_inset Formula $s_{k}$
\end_inset

 of 
\begin_inset Formula $S$
\end_inset

 form a basis for the columns of 
\begin_inset Formula $B^{-1}A$
\end_inset

 as in QR, but orthogonalized so that 
\begin_inset Formula $s_{i}^{*}Bs_{j}=0$
\end_inset

 for 
\begin_inset Formula $i\neq j$
\end_inset

 and 
\begin_inset Formula $=1$
\end_inset

 for 
\begin_inset Formula $i=j$
\end_inset

.) Make sure your algorithm still requires 
\begin_inset Formula $\Theta(m^{3})$
\end_inset

 operations!
\end_layout

\begin_layout Enumerate
In 
\emph on
exact arithmetic
\emph default
, what would 
\begin_inset Formula $S$
\end_inset

 in the SR factorization of 
\begin_inset Formula $(B^{-1}A)^{k}$
\end_inset

 converge to as 
\begin_inset Formula $k\to\infty$
\end_inset

, and why? (Assume the 
\begin_inset Quotes eld
\end_inset

generic
\begin_inset Quotes erd
\end_inset

 case where none of the eigenvectors happen to be orthogonal to the columns
 of 
\begin_inset Formula $B$
\end_inset

.)
\end_layout

\end_body
\end_document
